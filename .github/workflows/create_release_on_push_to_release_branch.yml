name: Create release on push to release branch

on:
  push:
    branches:
      - release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Setup and verify build passes tests
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: release

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{hashFiles('package-lock.json')}}
          restore-keys: npm-

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run tests
        run: npm test

      # Bump version and tag
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          release_branches: release

      # Build and add artifacts to release
      - name: Build dist folder
        run: npm run build

      - name: Substitute module.json values based on tag name
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: './dist/module.json'
        env:
          version: ${{steps.tag_version.outputs.new_tag}}
          url: https://github.com/${{github.repository}}
          download: https://github.com/${{github.repository}}/releases/download/${{steps.tag_version.outputs.new_tag}}/module-profiles.zip

      - name: Create release module .zip file
        run: cd dist && zip -r ../module-profiles.zip .

      - name: Create release with files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          name: ${{steps.tag_version.outputs.new_tag}}
          draft: false
          prerelease: false
          token: ${{secrets.GITHUB_TOKEN}}
          artifacts: './dist/module.json, ./module-profiles.zip'
          tag: ${{steps.tag_version.outputs.new_tag}}
          body: ${{steps.tag_version.outputs.changelog}}

      # Cleanup for next release, and merge changes back into main
      - name: Substitute module.json values based on tag name
        id: sub_package_json_version
        uses: microsoft/variable-substitution@v1
        with:
          files: './package.json'
        env:
          version: ${{steps.tag_version.outputs.new_tag}}

      - name: Commit package.json changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Updating development environment to latest version - ${{steps.tag_version.outputs.new_tag}}
          branch: release
          file_pattern: package.json

      - name: Merge release -> main
        run: |
          git config --global user.email "github-actions[bot]"
          git config --global user.name "github-actions[bot]@users.noreply.github.com"
          git status
          rm -r module-profiles.zip
          git status
          git pull
          git checkout ${{github.event.repository.default_branch}}
          git status
          git merge release --no-edit
          git push
          git status